model User {
    id String @id @default(cuid())

    name String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    email        String  @unique
    passwordHash String
    verified     Boolean

    role UserRoles @default(SOFTWARE_DEVELOPER)

    projects      Project[] @relation(name: "ProjectToParticipants")
    projectsOwned Project[] @relation(name: "ProjectToOwner")

    chatsSent     Chat[] @relation(name: "ChatToSender")
    chatsReceived Chat[] @relation(name: "ChatToRecipient")

    displayName String?
    bio         String?

    @@map("users")
}

enum UserEvents {
    SIGN_UP
    LOG_IN
}

enum UserRoles {
    ADMIN
    PRODUCT_OWNER
    PROJECT_MANAGER
    TECHNICAL_LEAD
    SOFTWARE_DEVELOPER
}

model Project {
    id String @id @default(cuid())

    owner   User   @relation(name: "ProjectToOwner", fields: [ownerId], references: [id])
    ownerId String

    participants User[] @relation(name: "ProjectToParticipants")

    @@map("projects")
}

model Chat {
    id String @id @default(cuid())

    from   User   @relation(name: "ChatToSender", fields: [fromId], references: [id])
    fromId String

    to   User?   @relation(name: "ChatToRecipient", fields: [toId], references: [id])
    toId String?

    @@map("chats")
}
